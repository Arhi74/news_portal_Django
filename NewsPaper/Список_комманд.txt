from news.models import *
u1 = User.objects.create_user('test1')
u2 = User.objects.create_user('test2')
a1 = Author.objects.create(user=u1)
a2 = Author.objects.create(user=u2)
c1 = Category.objects.create(name = 'Внешняя политика')
c2 = Category.objects.create(name = 'Внутренняя политика')
c3 = Category.objects.create(name = 'Местные новости')
c4 = Category.objects.create(name = 'Новости кино')
n1 = Post.objects.create(author = a1, position = 'Article', header = 'Орбан задал неудобный вопрос о вступлении Украины в ЕС', text = 'БУДАПЕШТ, 22 дек — РИА Новости. Премьер-министр Венгрии Виктор Орбан, комментируя решение ЕС начать переговоры с Украиной о вступлении в сообщество, поинтересовался, намерен ли Брюссель принимать ее вместе с освобожденными регионами и находящимися там российскими военными, и призвал для начала уточнить актуальные размеры и численность населения Украины.')
n2 = Post.objects.create(author = a1, position = 'Article', header = 'Как работают лотереи и реально ли сорвать джекпот', text = 'Рассказы о баснословных деньгах, которые можно получить, просто купив лотерейный билет, действительно поражают. Так, например, в 2017 году 63-летняя жительница небольшого поселка в Воронежской области выиграла 506 млн рублей, после вычета налога в 13% она получила на руки 440 млн рублей. В 2020 году житель Москвы стал обладателем «Новогоднего миллиарда» в рамках розыгрыша тиража лотереи.')
n3 = Post.objects.create(author = a1, position = 'News', header = 'Японцы прекратят выпуск в России популярного антибиотика вильпрафен', text = 'Международная фармкомпания со штаб-квартирой в Японии Astellas решила вывести с российского рынка антибиотики вильпрафен и вильпрафен солютаб (международное непатентованное наименование — джозамицин), выяснил РБК.')
pc1 = PostCategory.objects.create(post=n1, category=c1)
pc2 = PostCategory.objects.create(post=n1, category=c4) 
pc3 = PostCategory.objects.create(post=n2, category=c1)
pc4 = PostCategory.objects.create(post=n3, category=c1)
comment1 = Comment.objects.create(post= n1, user= u1, text='пощады!')
comment2 = Comment.objects.create(post= n1, user= u2, text='Произошла переобувочка')
comment3 = Comment.objects.create(post= n2, user= u1, text='Никогда не выигрывал(')
comment4 = Comment.objects.create(post= n3, user= u2, text='Чем я теперь лечиться буду?!')
comment1.like()
n1.like()
n2.like()
n2.like()
n2.like()
comment3.like()
comment3.dislike()
a1.update_rating()
a2.update_rating()
Author.objects.all().order_by('-rating').values('user__username', 'rating').first()
Post.objects.all().order_by('-rating').values('datetime', 'author__user__username', 'header').first()
best_post = Post.objects.all().order_by('-rating').first()
best_post.preview()
Comment.objects.filter(post=best_post).values()




